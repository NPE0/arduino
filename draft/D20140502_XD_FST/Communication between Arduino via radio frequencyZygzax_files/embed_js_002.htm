document.write('<style>		div.embedPastebin { padding: 0; color: #000; margin: 0; font-family: monospace; background: #eee; border: 1px solid ccc; }		div.embedPastebin {  }		div.embedPastebin div.embedFooter { background: #ccc; font-size: 100%; padding: 0px 6px; }		div.embedPastebin div.embedFooter a,		div.embedPastebin div.embedFooter a:visited { color: #336699; text-decoration:none; }		div.embedPastebin div.embedFooter a:hover { color: red; }		.noLines ol { list-style-type: none; padding-left: 0.5em; }		.embedPastebin{background-color:#F8F8F8;border:1px solid #ddd;font-size:12px;overflow:auto;margin: 0 0 0 0;padding:0 0 0 0;line-height:21px}		.embedPastebin div { line-height:21px; font-family:Consolas, Menlo, Monaco, Lucida Console,\'Bitstream Vera Sans Mono\',\'Courier\',monospace; }		ol { margin:0; padding: 0 0 0 48px}		li.ln-xtra .de1, li.ln-xtra .de2 {background:#FFFF88;}.embedPastebin ol li.li1 { margin: 0; } .embedPastebin ol li.li2 { margin: 0; } .c .de1, .c .de2 {-moz-user-select: text;-khtml-user-select: text;-webkit-user-select: text;-ms-user-select: text;user-select: text;margin:0; padding: 0 5px; background:none; vertical-align:top;color:#000;border-left: 1px solid #ccc; margin: 0 0 0 -7px; position: relative; background: #ffffff;}.c  {color:#ACACAC;}.c .imp {font-weight: bold; color: red;}.c li, .c .li1 {-moz-user-select: -moz-none;-khtml-user-select: none;-webkit-user-select: none;-ms-user-select: none;user-select: none;}.c .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}.c .kw1 {color: #b1b100;}.c .kw2 {color: #000000; font-weight: bold;}.c .kw3 {color: #000066;}.c .kw4 {color: #993333;}.c .co1 {color: #666666; font-style: italic;}.c .co2 {color: #339933;}.c .coMULTI {color: #808080; font-style: italic;}.c .es0 {color: #000099; font-weight: bold;}.c .es1 {color: #000099; font-weight: bold;}.c .es2 {color: #660099; font-weight: bold;}.c .es3 {color: #660099; font-weight: bold;}.c .es4 {color: #660099; font-weight: bold;}.c .es5 {color: #006699; font-weight: bold;}.c .br0 {color: #009900;}.c .sy0 {color: #339933;}.c .st0 {color: #ff0000;}.c .nu0 {color: #0000dd;}.c .nu6 {color: #208080;}.c .nu8 {color: #208080;}.c .nu12 {color: #208080;}.c .nu16 {color:#800080;}.c .nu17 {color:#800080;}.c .nu18 {color:#800080;}.c .nu19 {color:#800080;}.c .me1 {color: #202020;}.c .me2 {color: #202020;}.c .ln-xtra, .c li.ln-xtra, .c div.ln-xtra {color:black;background:#FFFF88;}.c span.xtra { display:block; }	</style>	<div class="embedPastebin">		<div class="embedFooter">Data hosted with &hearts; by <a href="http://pastebin.com" target="_top">Pastebin.com</a> - <a href="http://pastebin.com/raw.php?i=McSUxZUd" target="_top">Download Raw</a> - <a href="http://pastebin.com/McSUxZUd" target="_top">See Original</a></div><div class="c"><ol><li class="li1"><div class="de1"><span class="co1">//Test and text transmission with RF module for Arduino http://zygzax.com</span></div></li><li class="li2"><div class="de2"><span class="co1">//TRANSMITTER</span></div></li><li class="li1"><div class="de1"><span class="co2">#include &lt;VirtualWire.h&gt;</span></div></li><li class="li2"><div class="de2"><span class="kw4">void</span> setup<span class="br0">&#40;</span><span class="br0">&#41;</span></div></li><li class="li1"><div class="de1"><span class="br0">&#123;</span></div></li><li class="li2"><div class="de2">&nbsp; &nbsp; vw_set_ptt_inverted<span class="br0">&#40;</span><span class="kw2">true</span><span class="br0">&#41;</span><span class="sy0">;</span> &nbsp;<span class="co1">// Required by the RF module</span></div></li><li class="li1"><div class="de1">&nbsp; &nbsp; vw_setup<span class="br0">&#40;</span><span class="nu0">2000</span><span class="br0">&#41;</span><span class="sy0">;</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="co1">// bps connection speed</span></div></li><li class="li2"><div class="de2">&nbsp; &nbsp; vw_set_tx_pin<span class="br0">&#40;</span><span class="nu0">3</span><span class="br0">&#41;</span><span class="sy0">;</span> &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">// Arduino pin to connect the receiver data pin</span></div></li><li class="li1"><div class="de1"><span class="br0">&#125;</span></div></li><li class="li2"><div class="de2">&nbsp;</div></li><li class="li1"><div class="de1"><span class="kw4">void</span> loop<span class="br0">&#40;</span><span class="br0">&#41;</span></div></li><li class="li2"><div class="de2"><span class="br0">&#123;</span></div></li><li class="li1"><div class="de1">&nbsp; &nbsp;<span class="co1">//Message to send:</span></div></li><li class="li2"><div class="de2">&nbsp; &nbsp;<span class="kw4">const</span> <span class="kw4">char</span> <span class="sy0">*</span>msg <span class="sy0">=</span> <span class="st0">&quot;HELLO WORLD&quot;</span><span class="sy0">;</span></div></li><li class="li1"><div class="de1">&nbsp; &nbsp;vw_send<span class="br0">&#40;</span><span class="br0">&#40;</span><span class="kw4">uint8_t</span> <span class="sy0">*</span><span class="br0">&#41;</span>msg<span class="sy0">,</span> <span class="kw3">strlen</span><span class="br0">&#40;</span>msg<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span></div></li><li class="li2"><div class="de2">&nbsp; &nbsp;vw_wait_tx<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> &nbsp; &nbsp; &nbsp; &nbsp;<span class="co1">// We wait to finish sending the message</span></div></li><li class="li1"><div class="de1">&nbsp; &nbsp;delay<span class="br0">&#40;</span><span class="nu0">200</span><span class="br0">&#41;</span><span class="sy0">;</span> &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">// We wait to send the message again &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></div></li><li class="li2"><div class="de2"><span class="br0">&#125;</span></div></li></ol></div></div>');	